{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1kVu2mpHYwPiiqskFiFGysRRLU3tIamL3","timestamp":1681944717637}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["Nome da equipe:\n","\n","- aluno 1\n","- aluno 2\n","- aluno 3"],"metadata":{"id":"iBD3yTI4nNTB"}},{"cell_type":"markdown","source":["# **Importação de bibliotecas**"],"metadata":{"id":"0jbBsuQzlV2j"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"4NVGYLj5jljA","executionInfo":{"status":"ok","timestamp":1681944737242,"user_tz":180,"elapsed":2522,"user":{"displayName":"Tiago Cesar da Silva Lopes","userId":"04574674869405834450"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","\n","import matplotlib.pyplot as plt\n","from matplotlib.colors import ListedColormap\n","\n","from sklearn.metrics import accuracy_score  \n","from sklearn.metrics import precision_score \n","from sklearn.model_selection import train_test_split \n","\n","from sklearn.tree import DecisionTreeClassifier \n","from sklearn.svm import SVC  \n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.naive_bayes import GaussianNB \n","from sklearn.ensemble import RandomForestClassifier"]},{"cell_type":"markdown","source":["# **Importação de Dados**"],"metadata":{"id":"4N5UCeyJmRUM"}},{"cell_type":"markdown","source":["*Complete e execute o código python abaixo:*"],"metadata":{"id":"-LgzRDlHm1z7"}},{"cell_type":"code","source":["base_saude = pd.read_csv('/content/diabetes.csv')\n","base_saude.head(10)"],"metadata":{"id":"bIy5rJvXmYZ3","executionInfo":{"status":"ok","timestamp":1681944779967,"user_tz":180,"elapsed":410,"user":{"displayName":"Tiago Cesar da Silva Lopes","userId":"04574674869405834450"}},"outputId":"7af0b5a9-eb77-4428-a35d-a430dc86b50d","colab":{"base_uri":"https://localhost:8080/","height":363}},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   sexo  idade  hipertenso  doencaCardio  historicoFumante    imc  \\\n","0     0   80.0           0             1                 0  25.19   \n","1     0   54.0           0             0                 3  27.32   \n","2     1   28.0           0             0                 0  27.32   \n","3     0   36.0           0             0                 1  23.45   \n","4     1   76.0           1             1                 1  20.14   \n","5     0   20.0           0             0                 0  27.32   \n","6     0   44.0           0             0                 0  19.31   \n","7     0   79.0           0             0                 3  23.86   \n","8     1   42.0           0             0                 0  33.64   \n","9     0   32.0           0             0                 0  27.32   \n","\n","   nivelAcucar  glicose  diabetes  \n","0          6.6      140         0  \n","1          6.6       80         0  \n","2          5.7      158         0  \n","3          5.0      155         0  \n","4          4.8      155         0  \n","5          6.6       85         0  \n","6          6.5      200         1  \n","7          5.7       85         0  \n","8          4.8      145         0  \n","9          5.0      100         0  "],"text/html":["\n","  <div id=\"df-b3daf66e-8c0e-4736-a0dc-0218674c330c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sexo</th>\n","      <th>idade</th>\n","      <th>hipertenso</th>\n","      <th>doencaCardio</th>\n","      <th>historicoFumante</th>\n","      <th>imc</th>\n","      <th>nivelAcucar</th>\n","      <th>glicose</th>\n","      <th>diabetes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>80.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>25.19</td>\n","      <td>6.6</td>\n","      <td>140</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>54.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>27.32</td>\n","      <td>6.6</td>\n","      <td>80</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>28.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>27.32</td>\n","      <td>5.7</td>\n","      <td>158</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>36.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>23.45</td>\n","      <td>5.0</td>\n","      <td>155</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>76.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>20.14</td>\n","      <td>4.8</td>\n","      <td>155</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>20.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>27.32</td>\n","      <td>6.6</td>\n","      <td>85</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>44.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>19.31</td>\n","      <td>6.5</td>\n","      <td>200</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>79.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>23.86</td>\n","      <td>5.7</td>\n","      <td>85</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1</td>\n","      <td>42.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>33.64</td>\n","      <td>4.8</td>\n","      <td>145</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>27.32</td>\n","      <td>5.0</td>\n","      <td>100</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3daf66e-8c0e-4736-a0dc-0218674c330c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b3daf66e-8c0e-4736-a0dc-0218674c330c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b3daf66e-8c0e-4736-a0dc-0218674c330c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["# **Seção 1: Caracterização dos Dados**\n","\n","*Complete e execute o código python abaixo:*"],"metadata":{"id":"Ws9wxfXTnX31"}},{"cell_type":"code","source":["# Distribuição da variável resposta\n","num_categorias = base_saude['diabetes'].value_counts()\n","print(num_categorias)"],"metadata":{"id":"-ZC7kc0gnnU6","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1681944783300,"user_tz":180,"elapsed":504,"user":{"displayName":"Tiago Cesar da Silva Lopes","userId":"04574674869405834450"}},"outputId":"4f0412a0-bd94-4790-de4d-55985b8bdf69"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["0    91500\n","1     8500\n","Name: diabetes, dtype: int64\n"]}]},{"cell_type":"markdown","source":["O conjunto de dados é uma coleção de dados médicos juntamente com seu status de diabetes (positivo ou negativo). Os dados incluem características como idade, sexo, índice de massa corporal (IMC), hipertensão, doenças cardíacas, histórico de tabagismo e nível de açúcar no sangue. Esse conjunto de dados pode ser usado para criar modelos de aprendizado de máquina para prever diabetes em pacientes com base em seu histórico médico. Isso pode ser útil para os profissionais de saúde na identificação de pacientes que podem estar em risco de desenvolver diabetes e no desenvolvimento de planos de tratamento personalizados. \n","\n","Seu objetivo agora é avaliar a performance de modelos  de classificação considerando alguns  pontos:\n","\n","**Foi indicado pelo profissional de saúde especialista que as características (X) que estão altamente relacionadas a respota/saída (Y), são:**\n","1. idade\n","2. existência de hipertensão \n","3. existência de doença cardiaca\n","4. ser fumante \n","5. IMC \n","6. glicose no sangue"],"metadata":{"id":"6d3GLyK14SKa"}},{"cell_type":"code","source":["X = base_saude[['diabetes', '']] #indique as variáveis explicativas\n","Y = base_saude['diabetes'] #indique a variável resposta"],"metadata":{"id":"tihb2gJR5MGG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **Seção 2: Geração de Modelos de Classificação**\n","\n","\n","Instruções:\n","\n","\n","\n","- **Gere 3 classificadores:**\n","\n","1. Naive Bayes\n","2. Random Forest com 50 árvores\n","3. KNN com 9 vizinhos\n","\n","\n","- **Divida a base original em treino 70% e teste 30%**\n","\n","- **Analise o desempenho de 30 execuções de cada modelo**\n","\n","\n"],"metadata":{"id":"MclROv_202zo"}},{"cell_type":"markdown","source":["*Execute o código python abaixo para criar listas que servirão para salvar o desempenho dos modelos.*"],"metadata":{"id":"zNYzkB2JLXSj"}},{"cell_type":"code","source":["acuracia_modelo1 = []\n","acuracia_modelo2 = []\n","acuracia_modelo3 = []\n","\n","precisao_modelo1 = []\n","precisao_modelo2 = []\n","precisao_modelo3 = []"],"metadata":{"id":"kqOU0HsnLG8H","executionInfo":{"status":"ok","timestamp":1681945188974,"user_tz":180,"elapsed":392,"user":{"displayName":"Tiago Cesar da Silva Lopes","userId":"04574674869405834450"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["*Complete e execute o código python abaixo.*"],"metadata":{"id":"djkIQ4GQPwD8"}},{"cell_type":"code","source":["np.random.seed(14)\n","\n","# Altere os parâmetros abaixo para configuar  o ambiente adequadamente\n","iteracoes = 0 \n","train_size = 0\n","\n","for i in range(iteracoes):\n","    \n","    #PARTICIONAMENTO DE DADOS:\n","\n","    X_treino, X_teste, Y_treino, Y_teste = train_test_split(X, Y, train_size = train_size)\n","\n","    #TREINAMENTO DE MODELOS:\n","\n","    # Modelo 1 =  Naive Bayes\n","    model1 =\n","    model1.fit(X_treino, Y_treino)\n","\n","    # Modelo 2 =  Random Forest\n","    model2 = \n","    model2.fit(X_treino, Y_treino)\n","\n","    # Modelo 3 =  KNN\n","    model3 = \n","    model3.fit(X_treino, Y_treino)\n","\n","    #TESTE/AVALIAÇÃO DE MODELOS:\n","    \n","    predictions1 = model1.predict(X_teste)\n","    acuracia_modelo1.append(accuracy_score(Y_teste, predictions1))\n","    precisao_modelo1.append(precision_score(Y_teste, predictions1))\n","\n","    predictions2 = model2.predict(X_teste)\n","    acuracia_modelo2.append(accuracy_score(Y_teste, predictions2))\n","    precisao_modelo2.append(precision_score(Y_teste, predictions2))\n","\n","    predictions3 = model3.predict(X_teste)\n","    acuracia_modelo3.append(accuracy_score(Y_teste, predictions3))\n","    precisao_modelo3.append(precision_score(Y_teste, predictions3))\n","\n"],"metadata":{"id":"cumcubiN1KT9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **Seção 3: Avaliação de Modelos**"],"metadata":{"id":"NUGnb5j18BjS"}},{"cell_type":"markdown","source":["Execute o código abaixo imprimir a média de resultados de acurácia de cada modelo de classificação."],"metadata":{"id":"k2O5mFRk8WkW"}},{"cell_type":"code","source":["print('Média acurácia modelo 1:')\n","print(np.round(np.mean(acuracia_modelo1),2))\n","print('Média acurácia modelo 2:')\n","print(np.round(np.mean(acuracia_modelo2),2))\n","print('Média acurácia modelo 3:')\n","print(np.round(np.mean(acuracia_modelo3),2))"],"metadata":{"id":"rQmshPEA8MXT"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Agora, para imprimir a média de resultados de precisão de cada modelo de classificação."],"metadata":{"id":"UYC0ob4ABdkB"}},{"cell_type":"code","source":["print('Média precisão modelo 1:')\n","print(np.round(np.mean(precisao_modelo1),2))\n","print('Média precisão modelo 2:')\n","print(np.round(np.mean(precisao_modelo2),2))\n","print('Média precisão modelo 3:')\n","print(np.round(np.mean(precisao_modelo3),2))"],"metadata":{"id":"PA_h4ykV_2XZ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Abaixo, execute e visualize o gráfico boxplot para os 3 modelos.\n","\n","**Acurácia:**"],"metadata":{"id":"bH5yPglIIyZ7"}},{"cell_type":"code","source":["dados_resultados_acuracia =[acuracia_modelo1, acuracia_modelo2, acuracia_modelo3]\n","\n","plt.boxplot(dados_resultados_acuracia)\n","plt.title(\"Boxplot da amostra de acerto dos modelos\")\n","plt.show()"],"metadata":{"id":"9iWxwVoeBw2M"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Precisão:**"],"metadata":{"id":"4ovFwjKrI3ss"}},{"cell_type":"code","source":["dados_resultados_precisao =[precisao_modelo1, precisao_modelo2, precisao_modelo3]\n","\n","plt.boxplot(dados_resultados_precisao)\n","plt.title(\"Boxplot da amostra de precisão dos modelos para a classe 1\")\n","plt.show()"],"metadata":{"id":"AZ4Zr3_lB-YD"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Agora, com a ajuda do especialista do problema (médico, profissionais de saúde em geral) você encontrou um modelo/hipótese para resolver o problema de classificação. Esse modelo será usado em um sistema diagnóstico usado pelos especialistas da área de saúde."],"metadata":{"id":"_-0Y4NO9hJ_D"}},{"cell_type":"markdown","source":["# **Seção 4: Predição do melhor modelo**"],"metadata":{"id":"m1A4AIc6CSX4"}},{"cell_type":"markdown","source":["Com base no classificador escolhido na Seção 3, o sistema deverá retornar o rótulo/classe de um novo paciente com as seguintes características:\n","\n","idade = 72 anos\n","\n","Hipertensão  = 1\n","\n","Doença Cardíaca = 0 \n","\n","Histórico Fumante = 0\n","\n","IMC = 26.4\n","\n","Glicose = 230\n"],"metadata":{"id":"yy9CRJHGCwvJ"}},{"cell_type":"markdown","source":["*Complete e execute o código python abaixo.*"],"metadata":{"id":"hgl-sHncCsBp"}},{"cell_type":"markdown","source":["**Coleta de dados do paciente**"],"metadata":{"id":"GPCfVbUPfiol"}},{"cell_type":"code","source":["idade = int(input('Informe a idade do paciente: '))\n","hipertenso = int(input('Informe se o paciente é hipertenso: '))\n","doencaCardio = int(input('Informe se o paciente sofre de alguma doença cardíaca: '))\n","historicoFumante = int(input('Qual o histórico do paciente em relação ao tabagismo: '))\n","imc = float(input('Informe o IMC do paciente: '))\n","glicose = int(input('Indique a glicose: '))\n"],"metadata":{"id":"tj2SAJ3dfhzY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Resposta do sistema**"],"metadata":{"id":"9N2QuPzGgcDW"}},{"cell_type":"code","source":["novo_paciente = [[idade, hipertenso, doencaCardio, historicoFumante, imc, glicose]]\n","variaveis = ['idade','hipertenso', 'doencaCardio','historicoFumante','imc','glicose']\n","novo_paciente =  pd.DataFrame(novo_paciente, columns = variaveis)\n","resposta = modelX.predict(novo_paciente)    #Troque  o X pelo melhor número do melhor modelo (1, 2 ou 3)\n","\n","for i in range(len(resposta)):\n","  if resposta[i] == 1.0 :\n","    print('Desenvolverá diabetes')\n","  else:\n","    print('Não desenvolverá diabetes')"],"metadata":{"id":"bg0ExM-aDLOY"},"execution_count":null,"outputs":[]}]}